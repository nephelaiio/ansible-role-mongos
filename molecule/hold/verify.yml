---
- name: Verify mongos deployment
  hosts: mongos
  become: true
  tasks:
    - name: Query package versions
      ansible.builtin.shell:
        cmd: "apt-cache madison {{ item }} | awk -F'|' '{ print $2 }'"
      loop: "{{ mongos_package_name }}"
      register: _mongos_package_query
      changed_when: false

    - name: Initialize package versions
      ansible.builtin.set_fact:
        mongos_package_name: []

    - name: Set target package versions
      ansible.builtin.set_fact:
        mongos_package_name: "{{ mongos_package_name + [_package] }}"
      vars:
        _stdout: "{{ item.stdout_lines }}"
        _multiple: "{{ _stdout | length > 1 }}"
        _version: "{{ _stdout[0] if not _multiple else _stdout[1] }}"
        _package: "{{ item.item }}={{ _version | trim }}"
      loop_control:
        label: "{{ item.item }}"
      loop: "{{ _mongos_package_query.results }}"

    - name: Gather package facts
      ansible.builtin.package_facts:

    - name: Verify package versions
      ansible.builtin.fail:
        msg: "Expected installed version for package {{ _package }} to be {{ _version }}, found {{ _installed }}"
      vars:
        _package: "{{ item.split('=') | first }}"
        _version: "{{ item.split('=') | last }}"
        _installed: "{{ (packages[_package] | default([{'version': 'None'}]))[0].version }}"
      loop: "{{ mongos_package_name }}"
      when: _package not in packages or _version != _installed

    - name: Retrieve held packages
      ansible.builtin.command:
        cmd: apt-mark showhold
      register: _hold_query
