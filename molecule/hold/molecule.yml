---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  - name: mongos-hold-mongos01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongos
  - name: mongos-hold-mongos02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongos
  - name: mongos-hold-config01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - config
  - name: mongos-hold-config02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - config
  - name: mongos-hold-config03
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - config
  - name: mongos-hold-shard01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - shard
  - name: mongos-hold-shard02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - shard
  - name: mongos-hold-shard03
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-"/lib/systemd/systemd"}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - shard
provisioner:
  name: ansible
  inventory:
    hosts:
      all:
        vars:
          mongos_service_name: mongos
          mongos_service_manage: false
          mongos_service_restart: false
          mongos_replicaset_config_name: config
          mongos_replicaset_shard_name: shard
          mongos_packages:
            - mongodb-org-server
            - mongodb-org-mongos
            - mongodb-mongosh
      mongos:
        vars:
          mongodb_votes_group: "_replicaset_votes_mongos"
          mongodb_non_votes_group: "_replicaset_non_votes_mongos"
          mongodb_voting_group: "_replicaset_voting_mongos"
          mongodb_priority_group: "_replicaset_priority_mongos"
          mongodb_non_priority_group: "_replicaset_non_priority_mongos"
          mongodb_compliant_group: "_replicaset_compliant_mongos"
          mongodb_non_compliant_group: "_replicaset_non_compliant_mongos"
          mongodb_non_voting_group: "_replicaset_non_voting_mongos"
          mongodb_alien_group: "_replicaset_alien_mongos"
          mongodb_non_alien_group: "_replicaset_non_alien_mongos"
          mongodb_member_group: "_replicaset_member_mongos"
          mongodb_failed_group: "_replicaset_failed_mongos"
      config:
        vars:
          mongodb_votes_group: "_replicaset_votes_config"
          mongodb_non_votes_group: "_replicaset_non_votes_config"
          mongodb_voting_group: "_replicaset_voting_config"
          mongodb_priority_group: "_replicaset_priority_config"
          mongodb_non_priority_group: "_replicaset_non_priority_config"
          mongodb_compliant_group: "_replicaset_compliant_config"
          mongodb_non_compliant_group: "_replicaset_non_compliant_config"
          mongodb_non_voting_group: "_replicaset_non_voting_config"
          mongodb_alien_group: "_replicaset_alien_config"
          mongodb_non_alien_group: "_replicaset_non_alien_config"
          mongodb_member_group: "_replicaset_member_config"
          mongodb_failed_group: "_replicaset_failed_config"
      shard:
        vars:
          mongodb_votes_group: "_replicaset_votes_shard"
          mongodb_non_votes_group: "_replicaset_non_votes_shard"
          mongodb_voting_group: "_replicaset_voting_shard"
          mongodb_priority_group: "_replicaset_priority_shard"
          mongodb_non_priority_group: "_replicaset_non_priority_shard"
          mongodb_compliant_group: "_replicaset_compliant_shard"
          mongodb_non_compliant_group: "_replicaset_non_compliant_shard"
          mongodb_non_voting_group: "_replicaset_non_voting_shard"
          mongodb_alien_group: "_replicaset_alien_shard"
          mongodb_non_alien_group: "_replicaset_non_alien_shard"
          mongodb_member_group: "_replicaset_member_shard"
          mongodb_failed_group: "_replicaset_failed_shard"
scenario:
  converge_sequence:
    - converge
  test_sequence:
    - destroy
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
verifier:
  name: ansible
